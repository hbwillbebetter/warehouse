#参考 https://blog.csdn.net/lizheng1992123/article/details/81608007
server:
  port: 8080
spring:
  datasource: 
    driver-class-name: com.mysql.jdbc.Driver  #  配置mysql的驱动程序类
    url: jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=UTF-8         #  数据库连接地址
    username: root  #  数据库用户名
    password: root  #  数据库密码
#    type: com.alibaba.druid.pool.DruidDataSource  #  配置当前要使用的数据源的操作类型
#    filters: stat,wall,log4j                      #  配置druid过滤器，开启监控
    type: com.zaxxer.hikari.HikariDataSource  #  (高性能数据库连接池)
    hikari:
      pool-name: DatebookHikariCP
      minimum-idle: 3
      auto-commit: true
      idle-timeout: 10000   #一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      maximumPoolSize: 15   #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      max-lifetime: 1800000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      connection-timeout: 30000 #等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
#    dbcp2:                                        #  进行数据库连接池的配置
#      min-idle: 5                                 #  数据库连接池的最小维持连接数
#      initial-size: 5                             #  初始化提供的连接数
#      max-total: 5                                #  最大连接数
#      max-wait-millis: 200                        #  等待连接获取的最大超时时间
spring.thymeleaf:   #thymeleaf配置,这里是可以省略的，因为默认配置已经足够
  content-type: text/html
  cache: false  #是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。 关闭缓存，及时刷新页面,这一点很重要
  mode: LEGACYHTML5
#自定义启动banner文件的路径
spring.banner.location: banner.txt
#  prefix: classpath:/templates/   #指定模板所在的目录   注释的部分是Thymeleaf默认的配置，如有其它需求可以自行更改
#  suffix: .html   #注释的部分是Thymeleaf默认的配置，如有其它需求可以自行更改
#  mode: HTML5   #注释的部分是Thymeleaf默认的配置，如有其它需求可以自行更改
#  encoding: UTF-8   #与Servlet中设置输出对应属性效果一致。    注释的部分是Thymeleaf默认的配置，如有其它需求可以自行更改
#  servlet.content-type: text/html   #与Servlet中设置输出对应属性效果一致。  注释的部分是Thymeleaf默认的配置，如有其它需求可以自行更改
spring.freemarker: 
  suffix: .ftl #默认扩展名为 .ftl，放在templates文件夹中，如果想改变，可以通过application配置文件中添加spring.freemarker.suffix=.html,更改后就会找.html结尾的文件模板
spring.devtools.restart:  #设置热部署
  enabled: true   #开启热部署
  additional-paths: src/main/java   #重启范围
spring.redis:
    database: 0
    host: localhost
    port: 6379
    password: 12345
    timeout: 2000 # 连接超时时间 单位 ms（毫秒）
    jedis.pool:
      #jedis最大分配对象
      maxTotal: 1024
      #jedis最大保存idel状态对象数
      maxIdle: 200
      #jedis池没有对象返回时，最大等待时间
      maxWaitMillis: 1000
      testOnBorrow: true
      testOnReturn: true
      blockWhenExhausted: false
    pool:
      max-active: 8 # 如果赋值为-1，则表示不限制；pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
      max-wait: 1 # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时
      max-idle: 8 # 连接池中的最大空闲连接，默认值也是8。
      min-idle: 0 #连接池中的最小空闲连接，默认值也是0。
mybatis: 
#  configLocation: 
#    classpath: mybatis/mybatis-config.xml  #  mybatis主配置文件所在路径
#    map-underscore-to-camel-case: true  #开启驼峰映射
  configuration.log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启控制台打印sql
  typeAliasesPackage: springboot.mybatis.commonMapper.model  #  定义所有操作类的别名所在包
  mapper-locations: classpath:mybatis/commonMapper/mapper/*.xml  #  所有的mapper映射文件（mapper接口映射过来的xml局部配置文件）
mapper: 
  mappers: tk.mybatis.mapper.common.Mapper  #通用mapper的所在接口名称 不只是包名
  identity: MYSQL #数据库
pagehelper:                       #pagehelper分页插件
    helperDialect: mysql          #设置数据库方言
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql  
logging:
  config: classpath:logback-spring.xml
#log:
#  level:
#    root: info
#    my: debug
#  file: logs/admin-server.log
#  maxsize: 30MB



    
    